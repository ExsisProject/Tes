define("timeline/models/history",function(require){var e=require("backbone"),t=require("app"),n=e.Model.extend({url:function(){return t.contextRoot+"api/ehr/timeline/history"+(this.isNew()?"":"/"+this.get("id"))+"?"+"userId="+this.get("targetUserId")+"&baseDate="+this.get("baseDate")},requestInfo:{},getId:function(){return this.get("id")},getCheckTime:function(){return t.util.convertWithDataTimeZone(this.get("checkTime"))},checkTimeDate:function(e){return this.getCheckTime().format("YYYY-MM-DD")},checkTimeHour:function(){return this.getCheckTime().format("HH")},checkTimeMinute:function(){return this.getCheckTime().format("mm")},checkTimeHourMinuteSecond:function(){return this.getCheckTime().format("HH:mm:ss")},isRenderProgressBar:function(){return this.get("viewProgressBar")},isClockOut:function(){return this.getStatus().timelineCode=="defaultClockOut"},isClockIn:function(){return this.getStatus().timelineCode=="defaultClockIn"},checkTime24:function(){var e=new Date(this.get("checkTime")),t=e.getHours()*1e3*60*60;return t+=e.getMinutes()*1e3*60,t+=e.getSeconds()*1e3,new Date(t)},getStatusName:function(){return this.getStatus().name},getStatusId:function(){return this.getStatus().id},getStatus:function(){return this.get("timelineStatus")},isCheckTimeHour:function(e){return this.getCheckTime().format("HH")==e},isDefaultType:function(){return this.getStatus().defaultStatus},isCheckTimeMinute:function(e){return this.getCheckTime().format("mm")==e},isBefore:function(e,t,n){var r=e*1e3*60*60+t*1e3*60+n*1e3;return r>=this.checkTime24()},isAfter:function(e,t,n){var r=e*1e3*60*60+t*1e3*60+n*1e3;return r<=this.checkTime24()},isNightWork:function(){return this.get("isNightWork")},getContent:function(){return this.get("content")},getRequestInfo:function(){return this.requestInfo}});return n});