define("timeline/models/summary",function(require){var e=require("backbone"),t=require("timeline/models/weekly_stat"),n=require("timeline/models/month_stat"),r=require("admin/models/ehr/timeline/group"),i=e.Model.extend({initialize:function(e){this.userId=e.userId,this.baseDate=e.baseDate},url:function(){return GO.contextRoot+"api/ehr/timeline/summary?"+$.param({userId:this.userId,baseDate:this.baseDate})},parse:function(e){this.week=new t(e.week),this.month=new n(e.month),this.group=new r(e.group)},getWeekTotalWorkingTime:function(){return this.week.getTotalWorkingTime()},getWeekExtensionWorkingTime:function(){return this.week.getExtensionWorkingTimeStr()},getWeekRestWorkingTime:function(){return this.week.getRestWorkingTime()},getMonthTotalWorkingTime:function(){return this.month.getTotalWorkingTime()},getMonthExtentionWorkingTimeStr:function(){return this.month.getExtentionWorkingTimeStr()},getGroupName:function(){return this.group.get("name")},getWorkingTimeRange:function(){return this.group.getWorkingTimeRange()},isOverTotalWorkingTime:function(){return this.week.isOverTotalWorkingTime()},getGroupDesc:function(){return GO.util.escapeHtml(this.group.get("description"))},getRestPeriods:function(){return this.group.get("restperiods")},getNightWorkingTime:function(){return this.group.isFlexibleWorkingTimeType()?"":{startTime:this.group.getNightStartTime(),endTime:this.group.getNightEndTime()}},getSelectiveWorkingTime:function(){function n(e){var t=e.rate.normalWorkingTimeRate,n=e.rate.normalOverWorkingTimeRate,r=e.rate.extensionWorkingTimeRate,i=t+n+r;return i>100&&(t+n>100?(n=100-t-1,r=1):r=100-(t+n)),{tunedNormalWorkingTimeRate:t,tunedNormalOverWorkingTimeRate:n,tunedExtensionWorkingTimeRate:r}}var e=this.month.get("selectiveWorkingTime"),t=n(e);return e.rate.tunedNormalWorkingTimeRate=t.tunedNormalWorkingTimeRate,e.rate.tunedNormalOverWorkingTimeRate=t.tunedNormalOverWorkingTimeRate,e.rate.tunedExtensionWorkingTimeRate=t.tunedExtensionWorkingTimeRate,e},getMM:function(){var e=this.month.get("yyyymm");return e&&e.indexOf("-")>0?e.split("-")[1]:(new Date).getMonth()+1},getMonthWorkingTime:function(){return this.month.get("workingTime")}});return i});