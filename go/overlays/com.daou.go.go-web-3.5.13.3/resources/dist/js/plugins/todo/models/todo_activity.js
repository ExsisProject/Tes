define("todo/models/todo_activity",["when","app","todo/models/base","todo/libs/util"],function(e,t,n,r){var i={comment:"comment",action:"action"},s,o;return s=n.Model.extend({targetModel:null,set:function(){var e=[].slice.call(arguments);return _.isString(e[0])&&e[0]==="activityType"?this:(_.isObject(e[0])&&(e[0]=_.omit(e[0],"activityType")),n.Model.prototype.set.apply(this,e))},_set:function(){return n.Model.prototype.set.apply(this,arguments)},isCommentType:function(){return this.get("activityType")===i.comment},isActionType:function(){return this.get("activityType")===i.action}},{newForTodoItem:function(e,t,n){var r=new this.prototype.constructor(t,n);return r.targetModel=e,r}}),o=s.extend({save:function(){},destory:function(){}}),TodoItemCommentModel=s.extend({urlRoot:function(){var e=[t.config("contextRoot")+"api/todo",this.targetModel.get("todoId"),"item",this.targetModel.id,"comment"].join("/");return e},initialize:function(e,t){s.prototype.initialize.call(this,arguments),this._set("activityType",i.comment)},updateContent:function(e){return r.promiseModelSave(this,{content:e})},remove:function(){var t=e.defer();return this.destroy({success:t.resolve,error:function(e,n,r){t.reject(n)}}),t.promise}},{createForTodoItem:function(e,t){var n=this.newForTodoItem(e);return n.updateContent(t)}}),{ACTIVITY_TYPE:i,TodoItemActivityModel:o,TodoItemCommentModel:TodoItemCommentModel,newComment:function(e,t,n){return TodoItemCommentModel.newForTodoItem(e,t,n)},createComment:function(e,t){return TodoItemCommentModel.createForTodoItem(e,t)}}});