define("todo/models/todo_items",["when","app","todo/models/base","todo/models/todo_item","todo/libs/util"],function(e,t,n,r,i){var s;return s=n.Collection.extend({todoModel:null,filterCondition:{},model:function(e,t){var n=t.collection;return r.newFromTodo(n.todoModel,e,t)},url:function(){return[t.config("contextRoot")+"api/todo",this.todoModel.id,"item/list"].join("/")},initialize:function(e,t){n.Collection.prototype.initialize.apply(this,arguments),this.filterCondition={}},setFilter:function(e){var t=[].slice.call(arguments);return _.isString(e)?this.filterCondition[e]=t[1]:_.isObject(e)&&_.extend(this.filterCondition,e),this},getFilteredList:function(e){return this.setFilter(e),i.promiseAsync(_.result(this,"url"),{type:"POST",data:this.filterCondition||{}}).then(_.bind(this.reset,this))},updateTodoItem:function(e,t){var n=this.get(e),r=this;return n.updateAttributes(t).then(function(e){return r.updateModel(e),r})}},{newFromTodo:function(e,t,n){var r=new this.prototype.constructor(t,n);return r.todoModel=e,r}}),s});