define("works/components/chart/models/chart_setting",function(){return Backbone.Model.extend({initialize:function(e){this.fieldCid=e.fieldCid,this.modelName="chart_setting"},defaults:{title:"",goal:"",chartType:"COLUMN",groupByCid:"",rangeOption:null,aggMethod:"COUNT",subAggMethod:"COUNT",aggCid:"",theme:"0"},getValues:function(){var e={};return this.has("fromDate")&&(e.fromDate=this.get("fromDate")),this.has("toDate")&&(e.toDate=this.get("toDate")),this.has("fromValue")&&(e.fromValue=this.get("fromValue")),this.has("toValue")&&(e.toValue=this.get("toValue")),this.has("fromUnit")&&(e.fromUnit=this.get("fromUnit")),this.has("toUnit")&&(e.toUnit=this.get("toUnit")),e},toDateTime:function(){var e=this.getValues(),t=null,n=null;return _.each(e,function(r,i){switch(i){case"fromValue":t=moment().subtract(parseInt(r),e.fromUnit+"s");break;case"toValue":n=moment().add(parseInt(r),e.toUnit+"s");break;case"fromDate":t=moment(r);break;case"toDate":n=moment(r)}},this),{fromDateTime:t,toDateTime:n}},isInvalidTitle:function(){var e=!1,t=this.get("title");if(t.length<1||t.length>20)e=!0;return e},isInvalidGoal:function(){var e=!1;return this.get("chartType")==="GAUGE"&&!this.get("goal")&&(e=!0),e},setQueryString:function(e){this.set("queryString",e)}})});