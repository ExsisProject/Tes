define("works/views/app/report/works_report_filter",function(require){var e=require("works/components/filter/views/filter_condition_add_button"),t=require("hgn!works/components/report/template/report_filter"),n=require("works/components/filter/models/filter"),r=require("works/components/filter/models/filter_condition"),i=require("works/components/filter/collections/filter_conditions"),s=require("works/components/filter/views/filter_condition_button"),o=require("works/constants/value_type");return Backbone.View.extend({initialize:function(e){this.template=t,this.fields=e.fields,this.conditions=e.conditions||new i,this.conditions.on("unuseCondition",this._onUnuseCondition,this),this._initFilter({conditions:this.conditions.toJSON()})},render:function(){return this.$el.html(this.template(_.extend({model:this.filter.toJSON()},this.templateParam))),this._renderFieldAddButton(),this._renderConditions(this.conditions),this},_initFilter:function(e,t){var r={appletId:this.appletId,type:t||"mine",useDocNo:this.useDocNo||!1};_.isObject(e)?(this.filter=new n(_.extend(e,{useDocNo:this.useDocNo||!1})),this.conditions.reset(e.conditions)):e==="createdBy"?(this.filter=new n(_.extend(r,n.getCreatedByFilterOptions())),this.conditions.reset(this.filter.get("conditions"))):(parseInt(e)>0&&(r.id=parseInt(e)),this.filter=new n(r)),this.filter.off("sync"),this.filter.on("sync",this._onSyncFilter,this),this.filter.off("change:name"),this.filter.on("change:name",this._onChangeNameOfFilter,this)},_renderFieldAddButton:function(){var t=new e({useCheckbox:this.useCheckbox,type:o.SELECT,collection:this.fields.getFilterFields()});t.$el.on("addCondition",_.bind(this._onToggleFieldOption,this)),this.$("#fieldManagerAndConditionsArea").append(t.render().el)},_onToggleFieldOption:function(e,t){var n,i=t.get("isUsed");if(i){var s=t.fieldToCondition();n=new r(s);var o=this.fields.findWhere({cid:n.get("fieldCid")});n.setDefaultValues(),n.mergeFromFields(this.fields.toJSON()),this.conditions.push(n),this._renderConditionButton({type:o.get("fieldType"),valueType:o.get("valueType"),model:n},!0)}else n=this.conditions.findWhere({fieldCid:t.get("cid")}),n.trigger("unusedItem",[n])},_renderConditionButton:function(e,t){var n=new s(_.extend(e,{fields:this.fields,zIndex:999}));this.$("#fieldManagerAndConditionsArea").append(n.render().el),n.$el.find("td:last").css("width","auto")},_renderConditions:function(e){e.each(function(e){var t=this.fields.findWhere({cid:e.get("fieldCid")});if(!t)return;var n=t.get("fieldType"),r=t.get("valueType");if(!n)return;this._renderConditionButton({type:n,valueType:r,model:e})},this)},_clearConditionButtons:function(){this.$listEl&&this.$listEl.find("div[el-condition]").remove()},_getFilterQuery:function(){return this.filter.set("conditions",this.conditions.toJSON()),this.filter.getSearchQuery()},_getConditions:function(){return this.conditions},_onUnuseCondition:function(e){var t=this.fields.findWhere({cid:e.get("fieldCid")});t.set("isUsed",!1),this.conditions.remove([e]),this.filter.set("conditions",this.conditions.toJSON())}})});