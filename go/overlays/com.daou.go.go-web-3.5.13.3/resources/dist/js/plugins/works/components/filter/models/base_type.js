define("works/components/filter/models/base_type",function(require){var e=require("works/constants/value_type"),t=require("works/constants/condition_type");return Backbone.Model.extend({initialize:function(){},isSelectTypeCondition:function(){return _.contains([e.SELECT,e.SELECTS,e.USER,e.USERS,e.DEPTS],this.get("valueType"))},isTextValueType:function(){return _.contains([e.STEXT,e.TEXT,e.STEXTS],this.get("valueType"))},isSelectValueType:function(){return _.contains([e.SELECT,e.SELECTS],this.get("valueType"))},isUserType:function(){return _.contains([e.USER,e.USERS],this.get("valueType"))},isDeptType:function(){return e.DEPTS==this.get("valueType")},isOrgType:function(){return this.isUserType()||this.isDeptType()},isAppletDocValueType:function(){return e.APPLETDOCS===this.get("valueType")},isTextAppletDocType:function(){return this.isAppletDocValueType()&&!_.isArray(this.get("values").values)},isSelectAppletDocType:function(){return this.isAppletDocValueType()&&_.isArray(this.get("values").values)},isMultiValueType:function(){return _.contains([e.SELECTS,e.USERS,e.FILES,e.STEXTS,e.DEPTS,e.APPLETDOCS],this.get("valueType"))},_isMultiple:function(){return this.get("multiple")==1}})});