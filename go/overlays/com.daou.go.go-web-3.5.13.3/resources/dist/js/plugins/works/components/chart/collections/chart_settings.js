define("works/components/chart/collections/chart_settings",function(require){var e=require("works/constants/field_type"),t=require("works/components/chart/models/chart_setting"),n=Backbone.Collection.extend({model:t,initialize:function(e){this.collectionName="charts"},setQueryString:function(e){this.each(function(t){t.set("queryString",e)})},mergeFromFields:function(t){this.each(function(n){n.set("hasDeletedField",!1);if(n.get("aggCid")){var r=t.findWhere({cid:n.get("aggCid")});_.isUndefined(r)&&n.set("hasDeletedField",!0)}if(n.get("groupByCid")){var i=t.findWhere({cid:n.get("groupByCid")}),s=_.contains(e.PREDEFINED_TYPES,n.get("groupByCid"));_.isUndefined(i)&&!s&&n.set("hasDeletedField",!0)}if(n.get("subGroupByCid")){var o=t.findWhere({cid:n.get("subGroupByCid")}),s=_.contains(e.PREDEFINED_TYPES,n.get("subGroupByCid"));_.isUndefined(o)&&!s&&n.set("hasDeletedField",!0)}},this)},triggerChangeDocs:function(){this.each(function(e){e.trigger("change:docs")})},setChartsWithSeq:function(e){_.each(e,function(e,t){e.seq=t,this.push(e)},this)},reorder:function(e,t){var n=this.get(e);this.remove(n,{silent:!0}),this.add(n,{at:t})}});return n});